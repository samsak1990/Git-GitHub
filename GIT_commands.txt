git log --oneline - сокращенный список всех коммитов

git show - показать последний коммит
git show <ID_commit> - показать определенный коммит
git show HEAD~ - показать последний коммит
git show HEAD~2 - показать 2-й с конца коммит
git show "@~2" - аналогично вышеупомянутому
git show <ID_commit>:<file_name> - посмотреть файл из коммита

git checkout <ID_commit> <pathToFile/file_name> - восстановить определенный файл из указанного коммита

git checkout -f HEAD - сбросить состояние до предыдущего коммита

git merge <from_branch_name> - слияние ветвей (для начала переключиться на ту ветку, в которую нужно залить изменения)

git branch - список ветвей
git branch <branch_name> - создание новой ветки
git branch -f <branch_name> - переход на другую ветку без сохранения изменений в текущей
git branch -f <branch_name> <ID-commit> - создание ветки и привязка к коммиту
git checkout -b <branch_name> - создать новую ветку от текущего коммита и переключиться на нее
git branch -d <branch_name> - удалить старую ветку

git stash - временно сохранить изменения в текущей ветке (файле) для переключения на другую ветку.
git stash pop - восстановить сохраненные изменения в ветке.

git reset -hard - откатиться на любой существующий коммит
git reset -hard @~ - откатиться к предыдущему коммиту (@ - original, ~ - предпоследний коммит)
git reset -hard ORIG_HEAD - вернуться на последний "подвешеный" коммит

git clean -df - удалить неотслеживаемые файлы для сброса

git reflog - которая позволяет просматривать историю всех изменений, включая те, которые могли быть потеряны или забыты.
